aw1wb3J01GphdmEuaW8uKjtfX251d2xpbmVfX2ltcG9ydCBqYXZhIm1hdGguKjtfX251d2xpbmVfX21tcG9ydCBqYXZhLnNlY3VyaXR5Lio7X19uZXdsaW51X19pbXB vcnQgamF2YS50ZXh0Lio7X19uZXdsaW51X19pbXBycnQgamF2YS51dGlsLio7X19uZXdsaW51X19pbXBvcnQgamF2YS51dG1sLmNvbmNlcnJlbnQuKjtfX251d2xpbm VfX21tcG9ydCBqYXZhLnV0aWwuZnVuY3Rpb24uKjtfX251d2xpbmVfX2ltcG9ydCBqYXZhLnV0aWwucmVn2XguKjtfX251d2xpbmVfX21tcG9ydCBqYXZhLnV0aWwuc 3RyZWFtLio7X19uZXdsaW51X19pbXBvcnQgc3RhdGljIGphdmEudXRpbC5zdHJlYW0uQ29sbGVjdG9ycy5qb2luaW5n019fbmV3bGluZV9faW1wb3J0IHNOYXRpYyBq YXZhLnV0aWwuc3RyZWFtLkNvbGxlY3RvcnMudG9MaXN0019fbmV3bGluZV9fX19uZXdsaW51X19jbGFzcYBSZXN1bHQge19fbmV3bGluZV9fX19uZXdsaW51X18GICA gLypfX251d2xpbmVfXyAgICAgKiBDb21wbGV0ZSB0aGUgJ2dyaWRsYW5kTWV0cmBnIGZ1bmN0aW9uIGJlbG93L19fbmV3bGluZV9fICAgICAqX19uZXdsaW51X18gIC AgICogVGhlIGZlbmN0aW9uIGlzIGV4cGVjdGVkIHRVIHJldHVybiBhbiBJT1RFROVSL19fbmV3bGluZV9fICAgICAgIFROZSBmdW5jdGlvbiBhY2NleHRZIGZvbGxvd 2luZyBwYXJhbWV0ZXJzO19fbmV3bGluZV9fICAgICAgICAxLiBJTIRFRÖVSIG5fX251d2xpbmVfXyAgICAgKiAgMi4gSUSURUdFUiBtX19uZXdsaW51X1BgICAgiCog IDMUIELOVEVHRVIga19fbmV3bGluZV9fICAgICAgICA0LiAYRF9JTIRFRÖVSXOFSUKFZIHRyYWNrX19uZXdsaW51X18gICAgICovX19uZXdsaW51X18gICAgIF9fbmV 3bGluZV9fICAgICBzdGF0aWMgY2xhc3MgUGFpciB7X19uZXdsaW51X18gICAgICAgICBJbnRlZ2VyIG1pbjtfX251d2xpbmVfXyAgICAgICAgIEludGVnZXIgbWF401 9fbmV3bGluZV9fICAgICAgICAgUGFpcihJbnRlZ2VyIG1pbiwgSW50ZWdlciBtYXgpIHtfX251d2xpbmVfXyAgICAgICAgICAgICB0aGlzImipbiA9IG1pbjtfX251d 2xpbmVfXyAgICAgICAgICAgICB0aGlzLmiheCA9IG1heDtfX251d2xpbmVfXyAgICAgICAgIH1fX251d2xpbmVfXyAgICAgICAgIGludCB0cmFjaygpIHtfX251d2xp bmVfXyAgICAgICAgICAgICByZXR1cm4gbWF4IC0gbWluICsxO19fbmV3bGluZV9fICAgICAgICAgfV9fbmV3bGluZV9fICAgICB9X19uZXdsaW51X19fX251d2xpbmV fX3B1YmxpYyBzdGF0aWMgbG9uZyBncmlkbGFuZE11dHJvKGludCBuLCBpbnQgbSwgaW50IGssIExpc3QBTGlzdDxJbnRlZ2VyPj4gdHJhY2spIHtfX251d2xpbmVfXy AgICAgICAgSGFzaE1hcDxMb25nLCBMaXNOPFRYYWNrcz4